{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"128225aa388a3da26294cf4ab811cefef76bcfa3","modified":1554564716000},{"_id":"source/404.html","hash":"251a3388eaa66640244156a427e4323bd03e5c82","modified":1554562325000},{"_id":"source/CNAME","hash":"77da43c4b6314e3b3c20076bde2129c1d64d8917","modified":1554562325000},{"_id":"themes/next/.DS_Store","hash":"8d931ddc5fc7f3e578224485d1bc5e94df90678b","modified":1554564716000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1554562325000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1554562325000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1554562325000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1554562325000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1554562325000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1554562325000},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1554562325000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1554562325000},{"_id":"themes/next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1554562325000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1554562325000},{"_id":"themes/next/_config.yml","hash":"5c04a6bae71601d184241c5964a4d37fcf51d371","modified":1554562325000},{"_id":"themes/next/bower.json","hash":"be0a430362cb73a7e3cf9ecf51a67edf8214b637","modified":1554562325000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1554562325000},{"_id":"themes/next/package.json","hash":"6b5bfec48776ddf9c03811b1ff2cb2b615eccc88","modified":1554562325000},{"_id":"source/_posts/170712.md","hash":"8a1dd6f81502fa326a59a4536feb90523ac8dafb","modified":1554562325000},{"_id":"source/_posts/springboot-swagger集成细节补充（二）.md","hash":"ec5279f6a9a39762a81677ef65b22f67620fa1b4","modified":1554562325000},{"_id":"source/_posts/springboot-swagger集成详解（一）.md","hash":"3918cd50cfe9e2a26bc575b9cb23c98c56be23cb","modified":1554562325000},{"_id":"source/_posts/记一次rm-f.md","hash":"64a7e2299e1a848d35803f4605b227b193ad36b7","modified":1555339125000},{"_id":"source/about/index.md","hash":"54061914ffa25228b69a66f96c8f970500ff215a","modified":1554562325000},{"_id":"source/categories/index.md","hash":"2a9c3e2e0c4048e16d321de6639e1d63632a5825","modified":1554562325000},{"_id":"source/tags/index.md","hash":"5478b6a3efcc507d9c33fd5d44bf257d05c2ec24","modified":1554562325000},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1554562325000},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1554562325000},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1554562325000},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1554562325000},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1554562325000},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1554562325000},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1554562325000},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1554562325000},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1554562325000},{"_id":"themes/next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1554562325000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1554562325000},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1554562325000},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1554562325000},{"_id":"themes/next/layout/_layout.swig","hash":"a44305f8fa7fe9c80eb50c0696a704424b589750","modified":1554562325000},{"_id":"themes/next/layout/archive.swig","hash":"5de4dca06b05d99e4f6bad617a4b8f4f3592fb01","modified":1554562325000},{"_id":"themes/next/layout/category.swig","hash":"82e7bc278559b4335ad974659104eaaf04863032","modified":1554562325000},{"_id":"themes/next/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1554562325000},{"_id":"themes/next/layout/page.swig","hash":"baa667bc801349d5c4984c0f172973d3780400df","modified":1554562325000},{"_id":"themes/next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1554562325000},{"_id":"themes/next/layout/schedule.swig","hash":"f93c53f6fd5c712584f6efba6f770c30fa8a3e80","modified":1554562325000},{"_id":"themes/next/layout/tag.swig","hash":"2e73ee478e981092ea9a5d10dd472a9461db395b","modified":1554562325000},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1554562325000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1554562325000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1554562325000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1554562325000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1554562325000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554562325000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1554562325000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1554562325000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1554562325000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"b16fcbf0efd20c018d7545257a8533c497ea7647","modified":1554562325000},{"_id":"themes/next/layout/_macro/post.swig","hash":"d6fe43765bc01017ca3f9a384eeddaf28b6382c8","modified":1554562325000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1554562325000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"ed1b3030122ee75186f5a88ef8a2d08c271a9671","modified":1554562325000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1554562325000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"ce7094ee05878161e7568a6dfae5b56ff3fbd6e1","modified":1554562325000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1554562325000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6a7eb93d8aa7d4baa472890bd666b921f449d8af","modified":1554562325000},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1554562325000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1554562325000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1554562325000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1554562325000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1554562325000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1554562325000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1554562325000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1554562325000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1554562325000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1554562325000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1554562325000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1554562325000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1554562325000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1554562325000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1554562325000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1554562325000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1554562325000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1554562325000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1554562325000},{"_id":"themes/next/scripts/tags/note.js","hash":"21b102db8a01c7b15ae2c0ea3ef3d4cf807ec6ed","modified":1554562325000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1554562325000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1554562325000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1554562325000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1554562325000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1554562325000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1554562325000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1554562325000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1554562325000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1554562325000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1554562325000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1554562325000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1554562325000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1554562325000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1554562325000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1554562325000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554562325000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554562325000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554562325000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554562325000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554562325000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554562325000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554562325000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1554562325000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1554562325000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1554562325000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1554562325000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1554562325000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1554562325000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1554562325000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1554562325000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1554562325000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1554562325000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1554562325000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1554562325000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1554562325000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1554562325000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1554562325000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1554562325000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1554562325000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1554562325000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"5ad4a1107ab78545d771e39c8e170726a5a2448e","modified":1554562325000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1554562325000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1554562325000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1554562325000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1554562325000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1554562325000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1554562325000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1554562325000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"ee63aa2e49507b884a2d56778479cf01c723d751","modified":1554562325000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1554562325000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1554562325000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1554562325000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1554562325000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1554562325000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1554562325000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1554562325000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1554562325000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"ceceb93029d98cd63a689ad08e25fbe7f6b7ee1c","modified":1554562325000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1554562325000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1554562325000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d6a793bcada68d4b6c58392546bc48a482e4a7d3","modified":1554562325000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1554562325000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1554562325000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1554562325000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1554562325000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1554562325000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1554562325000},{"_id":"themes/next/source/js/src/motion.js","hash":"1d88c054a68acd84d3f020183ab0c43250e7e2d0","modified":1554562325000},{"_id":"themes/next/source/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1554562325000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1554562325000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1554562325000},{"_id":"themes/next/source/js/src/utils.js","hash":"0fcb80ec11e6df05ed1a07b9338bef2669f93a70","modified":1554562325000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1554562325000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1554562325000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1554562325000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1554562325000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1554562325000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1554562325000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1554562325000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1554562325000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1554562325000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1554562325000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1554562325000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1554562325000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1554562325000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1554562325000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1554562325000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1554562325000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1554562325000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1554562325000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1554562325000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1554562325000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1554562325000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1554562325000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1554562325000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1554562325000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1554562325000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1554562325000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1554562325000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1554562325000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1554562325000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1554562325000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1554562325000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1554562325000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1554562325000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1554562325000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1554562325000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1554562325000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1554562325000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1554562325000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1554562325000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1554562325000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1554562325000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1554562325000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1554562325000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1554562325000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1554562325000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"b5074a61d04757b6adf8f757668b9fea01730a6c","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1554562325000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1554562325000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"7804e31c44717c9a9ddf0f8482b9b9c1a0f74538","modified":1554562325000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1554562325000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1554562325000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1554562325000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1554562325000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1554562325000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1554562325000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1554562325000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1554562325000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1554562325000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1554562325000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1554562325000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1554562325000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1554562325000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1554562325000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1554562325000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1554562325000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1554562325000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1554562325000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1554562325000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1554562325000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1554562325000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1554562325000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1554562325000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1554562325000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1554562325000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1554562325000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"88c7d75646b66b168213190ee4cd874609afd5e3","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ed88c8b51d0517759c777e71a6bfbe2907bcd994","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"4fda5d38c6c8d910e3bf5c74a48a8d4a3f3dc73d","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"468bc734f47209096588ef1a8e55e60a3b12aa63","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"ea8a85efc040051a2586d8420ca06b6b194a4a38","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"dfc86d37f5b580977d82af6ef835082d09a0c499","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"dd310c2d999185e881db007360176ee2f811df10","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1554562325000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"aeff0e6e23725e8baea27c890ccbbf466024f767","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1554562325000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1554562325000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1554562325000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1554562325000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1554562325000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1554562325000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1554562325000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1554562325000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1554562325000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1554562325000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1554562325000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1554562325000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1554562325000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1554562325000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1554562325000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1554562325000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1554562325000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1554562325000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1554562325000},{"_id":"public/404.html","hash":"2a60032c760f8698eb4ab338494a43eb63ac4dd7","modified":1555339156052},{"_id":"public/about/index.html","hash":"621a155703f8402925dd9fe83753d0280a3386bd","modified":1555339156052},{"_id":"public/categories/index.html","hash":"7dc9c10a62c1e549e577ee49772ad6770a464bac","modified":1555339156053},{"_id":"public/tags/index.html","hash":"4725a04ed0a99a3ab986c957e779b9b1be6d5171","modified":1555339156053},{"_id":"public/archives/2017/index.html","hash":"a30a31d067cb65a1656aa019c70555fba97e6f4c","modified":1555339156053},{"_id":"public/archives/2017/08/index.html","hash":"f5afe5d945f582e053213bcc6d171467016edbd9","modified":1555339156053},{"_id":"public/archives/2019/index.html","hash":"fe4291989dff09785dc55d2b0c8858f5bd3625f7","modified":1555339156053},{"_id":"public/archives/2019/04/index.html","hash":"8f46d5e7b2aed23d64ab238933d29f934b6d3415","modified":1555339156053},{"_id":"public/categories/java基础/index.html","hash":"89d3225c499c7cd455e0ff18b166aacc9f968802","modified":1555339156053},{"_id":"public/categories/java进阶/index.html","hash":"e5a40ad615568481a2c7757a24a2be5f04a1672f","modified":1555339156053},{"_id":"public/tags/java/index.html","hash":"1e0bdf858f26f4061107b9a4980725c4da337a50","modified":1555339156053},{"_id":"public/tags/并发编程/index.html","hash":"4345f14b4cde772809cc0042de9ec97db07ff121","modified":1555339156053},{"_id":"public/tags/springboot/index.html","hash":"f78760d59bd7d9b89341a456bdfc9741aa7dd1ea","modified":1555339156053},{"_id":"public/tags/swagger/index.html","hash":"72834b79c2159b25b2aa620e3995869f9c393fff","modified":1555339156053},{"_id":"public/2019/04/15/记一次rm-f/index.html","hash":"0416e15d8fcefa9b3e3af62114c1b7648f8b7cde","modified":1555339156053},{"_id":"public/2019/04/06/170712/index.html","hash":"42dd3c6ed192c915f3ad147f695a1924dd618b30","modified":1555339156053},{"_id":"public/2017/08/24/springboot-swagger集成细节补充（二）/index.html","hash":"b47a7ebc87116880a5f711f65b9f8b45f743ca41","modified":1555339156053},{"_id":"public/2017/08/22/springboot-swagger集成详解（一）/index.html","hash":"18204b32403964b961947eef8fbde90bb327de37","modified":1555339156053},{"_id":"public/archives/index.html","hash":"253c7e28179888aaac654935f088d973593a9674","modified":1555339156053},{"_id":"public/index.html","hash":"2229b5a09f90d0882bc48ba087fefd6a74bae125","modified":1555339156053},{"_id":"public/CNAME","hash":"77da43c4b6314e3b3c20076bde2129c1d64d8917","modified":1555339156059},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1555339156059},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1555339156059},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1555339156059},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1555339156059},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1555339156059},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1555339156059},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1555339156060},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1555339156060},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1555339156060},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1555339156060},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1555339156060},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1555339156060},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1555339156060},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1555339156060},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1555339156060},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1555339156060},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1555339156060},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1555339156060},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1555339156060},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1555339156060},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1555339156060},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1555339156060},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1555339156060},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1555339156060},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1555339156060},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1555339156060},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1555339156060},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1555339156060},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1555339156469},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1555339156474},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1555339156480},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1555339156480},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1555339156481},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1555339156481},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1555339156481},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1555339156481},{"_id":"public/js/src/motion.js","hash":"1d88c054a68acd84d3f020183ab0c43250e7e2d0","modified":1555339156481},{"_id":"public/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1555339156481},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1555339156481},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1555339156481},{"_id":"public/js/src/utils.js","hash":"0fcb80ec11e6df05ed1a07b9338bef2669f93a70","modified":1555339156481},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1555339156481},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1555339156481},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1555339156481},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1555339156482},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1555339156482},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1555339156482},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1555339156482},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1555339156482},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1555339156482},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1555339156482},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1555339156482},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1555339156482},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1555339156482},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1555339156482},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1555339156482},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1555339156482},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1555339156482},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1555339156482},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1555339156482},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1555339156482},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1555339156482},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1555339156482},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1555339156482},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1555339156482},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1555339156482},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1555339156482},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1555339156482},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1555339156483},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1555339156483},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1555339156483},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1555339156483},{"_id":"public/css/main.css","hash":"cf8f11de939f9d2f93597bce106d7b973d2cebc2","modified":1555339156483},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1555339156483},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1555339156487},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1555339156487},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1555339156487},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1555339156487},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1555339156487},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1555339156487},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1555339156487},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1555339156491},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1555339156491},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1555339156497},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1555339156497},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1555339156504},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1555339156504},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1555339156504},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1555339156504},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1555339156504},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1555339156504},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1555339156505},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1555339156509},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1555339156514},{"_id":"public/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1555339156517},{"_id":"public/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1555339156523},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1555339156527},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1555339156529},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1555339156532},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1555339156543},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1555339156549}],"Category":[{"name":"java基础","_id":"cjuigrwch00059f3el97lwfn9"},{"name":"java进阶","_id":"cjuigrwcm00099f3e9kvhomea"}],"Data":[],"Page":[{"_content":"<script type=\"text/javascript\"\n        src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\"\n        charset=\"utf-8\"\n        homePageUrl=\"http://www.lovebxm.com/\"\n        homePageName=\"�ص��ҵ���ҳ\">\n</script>","source":"404.html","raw":"<script type=\"text/javascript\"\n        src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\"\n        charset=\"utf-8\"\n        homePageUrl=\"http://www.lovebxm.com/\"\n        homePageName=\"�ص��ҵ���ҳ\">\n</script>","date":"2019-04-06T14:52:05.000Z","updated":"2019-04-06T14:52:05.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cjuigrwav00009f3e6ujjbw1a","content":"<script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homepageurl=\"http://www.lovebxm.com/\" homepagename=\"�ص��ҵ���ҳ\">\n</script>","site":{"data":{}},"excerpt":"","more":"<script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homepageurl=\"http://www.lovebxm.com/\" homepagename=\"�ص��ҵ���ҳ\">\n</script>"},{"title":"关于我","date":"2017-08-18T03:59:49.000Z","comments":0,"_content":"\n## 谢飞翔\n\nflyxie1991@foxmail.com","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2017-08-18 11:59:49\ncomments: false\n---\n\n## 谢飞翔\n\nflyxie1991@foxmail.com","updated":"2019-04-06T14:52:05.000Z","path":"about/index.html","layout":"page","_id":"cjuigrwce00029f3etplx1f3e","content":"<h2 id=\"谢飞翔\"><a href=\"#谢飞翔\" class=\"headerlink\" title=\"谢飞翔\"></a>谢飞翔</h2><p><a href=\"mailto:flyxie1991@foxmail.com\" target=\"_blank\" rel=\"noopener\">flyxie1991@foxmail.com</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"谢飞翔\"><a href=\"#谢飞翔\" class=\"headerlink\" title=\"谢飞翔\"></a>谢飞翔</h2><p><a href=\"mailto:flyxie1991@foxmail.com\" target=\"_blank\" rel=\"noopener\">flyxie1991@foxmail.com</a></p>\n"},{"title":"categories","date":"2017-08-18T06:54:52.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-08-18 14:54:52\ntype: \"categories\"\ncomments: false\n---\n","updated":"2019-04-06T14:52:05.000Z","path":"categories/index.html","layout":"page","_id":"cjuigrwcg00049f3ebf00dd24","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2017-08-18T03:51:36.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-08-18 11:51:36\ntype: \"tags\"\ncomments: false\n---\n","updated":"2019-04-06T14:52:05.000Z","path":"tags/index.html","layout":"page","_id":"cjuigrwgq000t9f3edczs7r99","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"ThreadLocal拾遗","_content":"## 结构\n#### 错误理解\n知道threadLocal用法，但是没看过源码的话，可能会想当然的认为ThreadLocal里维护了一个map，其中key为Thread对象，value为set的值。\n```java\n//假想的类\npublic class ThreadLocal<T> {\n\t//\n\tprivate Map<Thread,T> values;\n\n\tpublic void set(T t){\n\t\tvalues.put(Thread.currentThread(),t);\n\t}\n\t....\n}\n```\n<!-- more -->\n但是上面的代码存在一个问题，当当前Thread已经退出，可是map中还保存着thread的引用，gc无法回收，很快就会OOM。\n#### 源码分析\nThread维护了一个ThreadLocalMap，key为当前threadLocal对象，value值为set的值。当我们调用ThreadLocal的set方法时，其内部其实是在操作当前线程中的ThreadLocalMap。\n```java\n//JDK1.8\npublic class ThreadLocal<T> {\n\t....\n\tpublic void set(T value) {\n        Thread t = Thread.currentThread();\n        ThreadLocalMap map = getMap(t);\n        if (map != null)\n            map.set(this, value);\n        else\n            createMap(t, value);\n    }\n\t....\n}\n```\nThreadLocalMap是ThreadLoal中的一个静态内部类\n```java\n//JDK1.8\nstatic class ThreadLocalMap {\n\t\n    static class Entry extends WeakReference<ThreadLocal<?>> {\n        /** The value associated with this ThreadLocal. */\n        Object value;\n\n        Entry(ThreadLocal<?> k, Object v) {\n            super(k);\n            value = v;\n        }\n    }\n\n    private Entry[] table;\n```\n其中真正存放数据的是一个Entry数组,通过hash确认下标。Entry虽然继承自WeakReference,但真正弱引用的是key，也就是ThreadLocal（相对于threadLocal的特性这里使用弱引用个人觉得没什么必要，详细分析在后面）。整体结构如下图：![](http://images.cnitblog.com/blog/390680/201306/23002121-ef97b5c9bb204f3c9712377013a619fe.png)\n图片来源：http://blog.csdn.net/zsfsoftware/article/details/50933151\n\n## 存在内存泄漏吗\n网上有很多说ThreadLocal存在内存泄漏问题，就此分析一下。在一个线程中，使用ThreadLocal与不使用的内存区别,其实就是多了ThreadLocal对象本身和绑定的value值，对照上图，ThreadLocal对象生命周期是最长的，我们使用的时候一般都是static的，和项目的生命周期是一致的，其占内存是很小可以忽略不计的。其中value的生命周期是和Thread一致的。那么多出来的内存就是:value占用内存*thread数量。就此得出想要内存泄漏，1.增加value的大小，2.增加并发线程的数量。并发线程的数量一般都是可控的，所以其实value的值只要不大，使用ThreadLocal并不会出现内存泄漏。\n\n## 与线程池\n同时要注意的是，一般处理多线程的时候我们都会使用线程池。当某个线程任务完结时，线程可能并不会被销毁，而是放回线程池，这时如果之前没有清空ThreadLocal中的值，那么他仍占用内存空间。同时，下次取用线程的时候，ThreadLocal中存在的值可能会引起一系列的问题。举个例子：web项目中，每次请求过来，会从线程池中取出一个Thread处理该次请求，我们可以将当前的登录用户信息放入ThreadLocal中，但是用完后没有删除，Thread被放入线程池，下次该线程被取出时，ThreadLocal中已经存在登录用户信息了！但当前可能用户已经退出登录或者是另一个用户在使用！\n\n## 最佳实践\n①ThreadLocal中不应该存入数据量大的数据，尽量存入状态与某一个线程（例如，用户 ID 或事务 ID）相关联的数据。\n②用完及时调用remove方法，删除。\n使用场景：\n   一次请求中，可能多个地方会用到当前登录用户的信息。但是我们又不想每个地方都传递用户的信息。我们可以在请求入口加上拦截器，pre方法中将当前用户信息存入。使用到的地方直接通过ThreadLocal获取用户信息。使用完，在post方法中再调用remove方法。\n\n## 问题补充\n1.ThreadLocalMap中Entry继承WeakReference到底有没有必要？\n   真正弱引用的是key，也就是ThreadLocal。如果ThreadLocal没有被其他强引用引用的话，那么ThreadLocal对象是会被回收的。但是我们使用ThreadLocal的话，一般都是这样：private static ThreadLocal t = new ThreadLocal();这里的强引用t的生命周期是和项目一样长的！完全没法回收。退一步说，如果ThreadLocal可以被回收，那么新的Tread再想从ThreadLocal中设置/获取值就会报NPE，显然是不对的。所以我个人认为这里完全没必要使用WeakReference。\n2.如果我们在刚开头的错误理解里面，把key值Thread套上WeakReference是不是就可以了呢？\n   我个人觉得也是可行的，但是相对于当前jdk中的实现有什么缺点呢？不然为什么这么便于理解的方式不用，而是用当前这种设计？\n   我目前能想到的可能原因是hash，当前的key是ThreadLocal对象，在整个项目的生命周期中，ThreadLocal对象们是不变的，map完全不需要rehash，但是如果我们使用Thread做key，Thread对象是可变的。map需要频繁的rehash。","source":"_posts/170712.md","raw":"---\ntitle: ThreadLocal拾遗\ncategories:\n- java基础\ntags:\n  - java\n  - 并发编程\n---\n## 结构\n#### 错误理解\n知道threadLocal用法，但是没看过源码的话，可能会想当然的认为ThreadLocal里维护了一个map，其中key为Thread对象，value为set的值。\n```java\n//假想的类\npublic class ThreadLocal<T> {\n\t//\n\tprivate Map<Thread,T> values;\n\n\tpublic void set(T t){\n\t\tvalues.put(Thread.currentThread(),t);\n\t}\n\t....\n}\n```\n<!-- more -->\n但是上面的代码存在一个问题，当当前Thread已经退出，可是map中还保存着thread的引用，gc无法回收，很快就会OOM。\n#### 源码分析\nThread维护了一个ThreadLocalMap，key为当前threadLocal对象，value值为set的值。当我们调用ThreadLocal的set方法时，其内部其实是在操作当前线程中的ThreadLocalMap。\n```java\n//JDK1.8\npublic class ThreadLocal<T> {\n\t....\n\tpublic void set(T value) {\n        Thread t = Thread.currentThread();\n        ThreadLocalMap map = getMap(t);\n        if (map != null)\n            map.set(this, value);\n        else\n            createMap(t, value);\n    }\n\t....\n}\n```\nThreadLocalMap是ThreadLoal中的一个静态内部类\n```java\n//JDK1.8\nstatic class ThreadLocalMap {\n\t\n    static class Entry extends WeakReference<ThreadLocal<?>> {\n        /** The value associated with this ThreadLocal. */\n        Object value;\n\n        Entry(ThreadLocal<?> k, Object v) {\n            super(k);\n            value = v;\n        }\n    }\n\n    private Entry[] table;\n```\n其中真正存放数据的是一个Entry数组,通过hash确认下标。Entry虽然继承自WeakReference,但真正弱引用的是key，也就是ThreadLocal（相对于threadLocal的特性这里使用弱引用个人觉得没什么必要，详细分析在后面）。整体结构如下图：![](http://images.cnitblog.com/blog/390680/201306/23002121-ef97b5c9bb204f3c9712377013a619fe.png)\n图片来源：http://blog.csdn.net/zsfsoftware/article/details/50933151\n\n## 存在内存泄漏吗\n网上有很多说ThreadLocal存在内存泄漏问题，就此分析一下。在一个线程中，使用ThreadLocal与不使用的内存区别,其实就是多了ThreadLocal对象本身和绑定的value值，对照上图，ThreadLocal对象生命周期是最长的，我们使用的时候一般都是static的，和项目的生命周期是一致的，其占内存是很小可以忽略不计的。其中value的生命周期是和Thread一致的。那么多出来的内存就是:value占用内存*thread数量。就此得出想要内存泄漏，1.增加value的大小，2.增加并发线程的数量。并发线程的数量一般都是可控的，所以其实value的值只要不大，使用ThreadLocal并不会出现内存泄漏。\n\n## 与线程池\n同时要注意的是，一般处理多线程的时候我们都会使用线程池。当某个线程任务完结时，线程可能并不会被销毁，而是放回线程池，这时如果之前没有清空ThreadLocal中的值，那么他仍占用内存空间。同时，下次取用线程的时候，ThreadLocal中存在的值可能会引起一系列的问题。举个例子：web项目中，每次请求过来，会从线程池中取出一个Thread处理该次请求，我们可以将当前的登录用户信息放入ThreadLocal中，但是用完后没有删除，Thread被放入线程池，下次该线程被取出时，ThreadLocal中已经存在登录用户信息了！但当前可能用户已经退出登录或者是另一个用户在使用！\n\n## 最佳实践\n①ThreadLocal中不应该存入数据量大的数据，尽量存入状态与某一个线程（例如，用户 ID 或事务 ID）相关联的数据。\n②用完及时调用remove方法，删除。\n使用场景：\n   一次请求中，可能多个地方会用到当前登录用户的信息。但是我们又不想每个地方都传递用户的信息。我们可以在请求入口加上拦截器，pre方法中将当前用户信息存入。使用到的地方直接通过ThreadLocal获取用户信息。使用完，在post方法中再调用remove方法。\n\n## 问题补充\n1.ThreadLocalMap中Entry继承WeakReference到底有没有必要？\n   真正弱引用的是key，也就是ThreadLocal。如果ThreadLocal没有被其他强引用引用的话，那么ThreadLocal对象是会被回收的。但是我们使用ThreadLocal的话，一般都是这样：private static ThreadLocal t = new ThreadLocal();这里的强引用t的生命周期是和项目一样长的！完全没法回收。退一步说，如果ThreadLocal可以被回收，那么新的Tread再想从ThreadLocal中设置/获取值就会报NPE，显然是不对的。所以我个人认为这里完全没必要使用WeakReference。\n2.如果我们在刚开头的错误理解里面，把key值Thread套上WeakReference是不是就可以了呢？\n   我个人觉得也是可行的，但是相对于当前jdk中的实现有什么缺点呢？不然为什么这么便于理解的方式不用，而是用当前这种设计？\n   我目前能想到的可能原因是hash，当前的key是ThreadLocal对象，在整个项目的生命周期中，ThreadLocal对象们是不变的，map完全不需要rehash，但是如果我们使用Thread做key，Thread对象是可变的。map需要频繁的rehash。","slug":"170712","published":1,"date":"2019-04-06T14:52:05.000Z","updated":"2019-04-06T14:52:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjuigrwca00019f3exqhnpte9","content":"<h2 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h2><h4 id=\"错误理解\"><a href=\"#错误理解\" class=\"headerlink\" title=\"错误理解\"></a>错误理解</h4><p>知道threadLocal用法，但是没看过源码的话，可能会想当然的认为ThreadLocal里维护了一个map，其中key为Thread对象，value为set的值。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//假想的类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ThreadLocal</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Map&lt;Thread,T&gt; values;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(T t)</span></span>&#123;</span><br><span class=\"line\">\t\tvalues.put(Thread.currentThread(),t);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t....</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>但是上面的代码存在一个问题，当当前Thread已经退出，可是map中还保存着thread的引用，gc无法回收，很快就会OOM。</p>\n<h4 id=\"源码分析\"><a href=\"#源码分析\" class=\"headerlink\" title=\"源码分析\"></a>源码分析</h4><p>Thread维护了一个ThreadLocalMap，key为当前threadLocal对象，value值为set的值。当我们调用ThreadLocal的set方法时，其内部其实是在操作当前线程中的ThreadLocalMap。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//JDK1.8</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ThreadLocal</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">\t....</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(T value)</span> </span>&#123;</span><br><span class=\"line\">        Thread t = Thread.currentThread();</span><br><span class=\"line\">        ThreadLocalMap map = getMap(t);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (map != <span class=\"keyword\">null</span>)</span><br><span class=\"line\">            map.set(<span class=\"keyword\">this</span>, value);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            createMap(t, value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t....</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>ThreadLocalMap是ThreadLoal中的一个静态内部类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//JDK1.8</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ThreadLocalMap</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Entry</span> <span class=\"keyword\">extends</span> <span class=\"title\">WeakReference</span>&lt;<span class=\"title\">ThreadLocal</span>&lt;?&gt;&gt; </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/** The value associated with this ThreadLocal. */</span></span><br><span class=\"line\">        Object value;</span><br><span class=\"line\"></span><br><span class=\"line\">        Entry(ThreadLocal&lt;?&gt; k, Object v) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>(k);</span><br><span class=\"line\">            value = v;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Entry[] table;</span><br></pre></td></tr></table></figure></p>\n<p>其中真正存放数据的是一个Entry数组,通过hash确认下标。Entry虽然继承自WeakReference,但真正弱引用的是key，也就是ThreadLocal（相对于threadLocal的特性这里使用弱引用个人觉得没什么必要，详细分析在后面）。整体结构如下图：<img src=\"http://images.cnitblog.com/blog/390680/201306/23002121-ef97b5c9bb204f3c9712377013a619fe.png\" alt><br>图片来源：<a href=\"http://blog.csdn.net/zsfsoftware/article/details/50933151\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/zsfsoftware/article/details/50933151</a></p>\n<h2 id=\"存在内存泄漏吗\"><a href=\"#存在内存泄漏吗\" class=\"headerlink\" title=\"存在内存泄漏吗\"></a>存在内存泄漏吗</h2><p>网上有很多说ThreadLocal存在内存泄漏问题，就此分析一下。在一个线程中，使用ThreadLocal与不使用的内存区别,其实就是多了ThreadLocal对象本身和绑定的value值，对照上图，ThreadLocal对象生命周期是最长的，我们使用的时候一般都是static的，和项目的生命周期是一致的，其占内存是很小可以忽略不计的。其中value的生命周期是和Thread一致的。那么多出来的内存就是:value占用内存*thread数量。就此得出想要内存泄漏，1.增加value的大小，2.增加并发线程的数量。并发线程的数量一般都是可控的，所以其实value的值只要不大，使用ThreadLocal并不会出现内存泄漏。</p>\n<h2 id=\"与线程池\"><a href=\"#与线程池\" class=\"headerlink\" title=\"与线程池\"></a>与线程池</h2><p>同时要注意的是，一般处理多线程的时候我们都会使用线程池。当某个线程任务完结时，线程可能并不会被销毁，而是放回线程池，这时如果之前没有清空ThreadLocal中的值，那么他仍占用内存空间。同时，下次取用线程的时候，ThreadLocal中存在的值可能会引起一系列的问题。举个例子：web项目中，每次请求过来，会从线程池中取出一个Thread处理该次请求，我们可以将当前的登录用户信息放入ThreadLocal中，但是用完后没有删除，Thread被放入线程池，下次该线程被取出时，ThreadLocal中已经存在登录用户信息了！但当前可能用户已经退出登录或者是另一个用户在使用！</p>\n<h2 id=\"最佳实践\"><a href=\"#最佳实践\" class=\"headerlink\" title=\"最佳实践\"></a>最佳实践</h2><p>①ThreadLocal中不应该存入数据量大的数据，尽量存入状态与某一个线程（例如，用户 ID 或事务 ID）相关联的数据。<br>②用完及时调用remove方法，删除。<br>使用场景：<br>   一次请求中，可能多个地方会用到当前登录用户的信息。但是我们又不想每个地方都传递用户的信息。我们可以在请求入口加上拦截器，pre方法中将当前用户信息存入。使用到的地方直接通过ThreadLocal获取用户信息。使用完，在post方法中再调用remove方法。</p>\n<h2 id=\"问题补充\"><a href=\"#问题补充\" class=\"headerlink\" title=\"问题补充\"></a>问题补充</h2><p>1.ThreadLocalMap中Entry继承WeakReference到底有没有必要？<br>   真正弱引用的是key，也就是ThreadLocal。如果ThreadLocal没有被其他强引用引用的话，那么ThreadLocal对象是会被回收的。但是我们使用ThreadLocal的话，一般都是这样：private static ThreadLocal t = new ThreadLocal();这里的强引用t的生命周期是和项目一样长的！完全没法回收。退一步说，如果ThreadLocal可以被回收，那么新的Tread再想从ThreadLocal中设置/获取值就会报NPE，显然是不对的。所以我个人认为这里完全没必要使用WeakReference。<br>2.如果我们在刚开头的错误理解里面，把key值Thread套上WeakReference是不是就可以了呢？<br>   我个人觉得也是可行的，但是相对于当前jdk中的实现有什么缺点呢？不然为什么这么便于理解的方式不用，而是用当前这种设计？<br>   我目前能想到的可能原因是hash，当前的key是ThreadLocal对象，在整个项目的生命周期中，ThreadLocal对象们是不变的，map完全不需要rehash，但是如果我们使用Thread做key，Thread对象是可变的。map需要频繁的rehash。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h2><h4 id=\"错误理解\"><a href=\"#错误理解\" class=\"headerlink\" title=\"错误理解\"></a>错误理解</h4><p>知道threadLocal用法，但是没看过源码的话，可能会想当然的认为ThreadLocal里维护了一个map，其中key为Thread对象，value为set的值。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//假想的类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ThreadLocal</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Map&lt;Thread,T&gt; values;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(T t)</span></span>&#123;</span><br><span class=\"line\">\t\tvalues.put(Thread.currentThread(),t);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t....</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>","more":"<p>但是上面的代码存在一个问题，当当前Thread已经退出，可是map中还保存着thread的引用，gc无法回收，很快就会OOM。</p>\n<h4 id=\"源码分析\"><a href=\"#源码分析\" class=\"headerlink\" title=\"源码分析\"></a>源码分析</h4><p>Thread维护了一个ThreadLocalMap，key为当前threadLocal对象，value值为set的值。当我们调用ThreadLocal的set方法时，其内部其实是在操作当前线程中的ThreadLocalMap。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//JDK1.8</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ThreadLocal</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">\t....</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(T value)</span> </span>&#123;</span><br><span class=\"line\">        Thread t = Thread.currentThread();</span><br><span class=\"line\">        ThreadLocalMap map = getMap(t);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (map != <span class=\"keyword\">null</span>)</span><br><span class=\"line\">            map.set(<span class=\"keyword\">this</span>, value);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            createMap(t, value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t....</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>ThreadLocalMap是ThreadLoal中的一个静态内部类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//JDK1.8</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ThreadLocalMap</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Entry</span> <span class=\"keyword\">extends</span> <span class=\"title\">WeakReference</span>&lt;<span class=\"title\">ThreadLocal</span>&lt;?&gt;&gt; </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/** The value associated with this ThreadLocal. */</span></span><br><span class=\"line\">        Object value;</span><br><span class=\"line\"></span><br><span class=\"line\">        Entry(ThreadLocal&lt;?&gt; k, Object v) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>(k);</span><br><span class=\"line\">            value = v;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Entry[] table;</span><br></pre></td></tr></table></figure></p>\n<p>其中真正存放数据的是一个Entry数组,通过hash确认下标。Entry虽然继承自WeakReference,但真正弱引用的是key，也就是ThreadLocal（相对于threadLocal的特性这里使用弱引用个人觉得没什么必要，详细分析在后面）。整体结构如下图：<img src=\"http://images.cnitblog.com/blog/390680/201306/23002121-ef97b5c9bb204f3c9712377013a619fe.png\" alt><br>图片来源：<a href=\"http://blog.csdn.net/zsfsoftware/article/details/50933151\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/zsfsoftware/article/details/50933151</a></p>\n<h2 id=\"存在内存泄漏吗\"><a href=\"#存在内存泄漏吗\" class=\"headerlink\" title=\"存在内存泄漏吗\"></a>存在内存泄漏吗</h2><p>网上有很多说ThreadLocal存在内存泄漏问题，就此分析一下。在一个线程中，使用ThreadLocal与不使用的内存区别,其实就是多了ThreadLocal对象本身和绑定的value值，对照上图，ThreadLocal对象生命周期是最长的，我们使用的时候一般都是static的，和项目的生命周期是一致的，其占内存是很小可以忽略不计的。其中value的生命周期是和Thread一致的。那么多出来的内存就是:value占用内存*thread数量。就此得出想要内存泄漏，1.增加value的大小，2.增加并发线程的数量。并发线程的数量一般都是可控的，所以其实value的值只要不大，使用ThreadLocal并不会出现内存泄漏。</p>\n<h2 id=\"与线程池\"><a href=\"#与线程池\" class=\"headerlink\" title=\"与线程池\"></a>与线程池</h2><p>同时要注意的是，一般处理多线程的时候我们都会使用线程池。当某个线程任务完结时，线程可能并不会被销毁，而是放回线程池，这时如果之前没有清空ThreadLocal中的值，那么他仍占用内存空间。同时，下次取用线程的时候，ThreadLocal中存在的值可能会引起一系列的问题。举个例子：web项目中，每次请求过来，会从线程池中取出一个Thread处理该次请求，我们可以将当前的登录用户信息放入ThreadLocal中，但是用完后没有删除，Thread被放入线程池，下次该线程被取出时，ThreadLocal中已经存在登录用户信息了！但当前可能用户已经退出登录或者是另一个用户在使用！</p>\n<h2 id=\"最佳实践\"><a href=\"#最佳实践\" class=\"headerlink\" title=\"最佳实践\"></a>最佳实践</h2><p>①ThreadLocal中不应该存入数据量大的数据，尽量存入状态与某一个线程（例如，用户 ID 或事务 ID）相关联的数据。<br>②用完及时调用remove方法，删除。<br>使用场景：<br>   一次请求中，可能多个地方会用到当前登录用户的信息。但是我们又不想每个地方都传递用户的信息。我们可以在请求入口加上拦截器，pre方法中将当前用户信息存入。使用到的地方直接通过ThreadLocal获取用户信息。使用完，在post方法中再调用remove方法。</p>\n<h2 id=\"问题补充\"><a href=\"#问题补充\" class=\"headerlink\" title=\"问题补充\"></a>问题补充</h2><p>1.ThreadLocalMap中Entry继承WeakReference到底有没有必要？<br>   真正弱引用的是key，也就是ThreadLocal。如果ThreadLocal没有被其他强引用引用的话，那么ThreadLocal对象是会被回收的。但是我们使用ThreadLocal的话，一般都是这样：private static ThreadLocal t = new ThreadLocal();这里的强引用t的生命周期是和项目一样长的！完全没法回收。退一步说，如果ThreadLocal可以被回收，那么新的Tread再想从ThreadLocal中设置/获取值就会报NPE，显然是不对的。所以我个人认为这里完全没必要使用WeakReference。<br>2.如果我们在刚开头的错误理解里面，把key值Thread套上WeakReference是不是就可以了呢？<br>   我个人觉得也是可行的，但是相对于当前jdk中的实现有什么缺点呢？不然为什么这么便于理解的方式不用，而是用当前这种设计？<br>   我目前能想到的可能原因是hash，当前的key是ThreadLocal对象，在整个项目的生命周期中，ThreadLocal对象们是不变的，map完全不需要rehash，但是如果我们使用Thread做key，Thread对象是可变的。map需要频繁的rehash。</p>"},{"title":"springboot+swagger集成细节补充（二）","date":"2017-08-24T06:53:33.000Z","_content":"通过上一章，我们可以搭建出一套比较好用的在线API文档了。这套文档刚开始使用起来非常方便，但是随着接口的增多，又会有问题暴露出来:文档显得越来越臃肿，查找会变得不方便。那么是不是可以根据业务的不同对文档进行分组?接口文档是不是可以按照一定的顺序进行排序？（譬如按照开发的顺序排列）\n<!-- more -->\n## 准备\n本文中的样例代码可参考：[https://github.com/BestRumbleCN/springboot-swagger](https://github.com/BestRumbleCN/springboot-swagger) 中的boot-swagger2。\n## 分组\nswagger2中接口分组非常简单，在我们的配置类Swagger2Config.java中，一个Docket就对应着一个分组，我们可以通过创建多个Docket对象实现分组。\n```java\n@Configuration\n@EnableSwagger2\npublic class Swagger2Config {\n\n\t@Bean\n\tpublic Docket createDocket() {\n\t\treturn new Docket(DocumentationType.SWAGGER_2).groupName(\"用户信息\").apiInfo(userApiInfo()).select()\n\t\t\t\t.apis(RequestHandlerSelectors.basePackage(\"pri.fly.leaning.controller\"))\n\t\t\t\t.paths(PathSelectors.any()).build();\n\t}\n\n\tprivate ApiInfo userApiInfo() {\n\t\treturn new ApiInfoBuilder().title(\"在线接口文档\").description(\"用户相关接口\").termsOfServiceUrl(\"http://localhost:8080\")\n\t\t\t\t.contact(new Contact(\"fly\", \"https://github.com/BestRumbleCN\", \"flyxie2009@foxmail.com\")).version(\"1.0\")\n\t\t\t\t.build();\n\t}\n\t\n\t//配置多个Docket实例\n\t@Bean\n\tpublic Docket createDocket2() {\n\t\t...\n\t}\n\n}\n\n```\n具体的分组方式主要有两种：1.通过路径分组 2.通过注解分组\n#### 路径分组\n**通过RequestHandlerSelectors.basePackage(\"\")指定扫描的包路径。**\n假设我们在做一个学校的管理系统，后台用户分为校长、老师、学生。我们可以按照如下的方式对controller进行细分。\n![](http://palyboy.qiniudn.com/9.png)\n在我们的Swagger2Config.java可以配置三个Docket\n```java\n\t@Bean\n\tpublic Docket createPresidentDocket() {\n\t\treturn new Docket(DocumentationType.SWAGGER_2).groupName(\"校长\").apiInfo(presidentApiInfo()).select()\n\t\t\t\t.apis(RequestHandlerSelectors.basePackage(\"pri.fly.leaning.controller.president\"))\n\t\t\t\t.paths(PathSelectors.any()).build();\n\t}\n\t\n\t@Bean\n\tpublic Docket createStudentDocket() {\n\t\treturn new Docket(DocumentationType.SWAGGER_2).groupName(\"学生\").apiInfo(studentApiInfo()).select()\n\t\t\t\t.apis(RequestHandlerSelectors.basePackage(\"pri.fly.leaning.controller.student\"))\n\t\t\t\t.paths(PathSelectors.any()).build();\n\t}\n\n\t@Bean\n\tpublic Docket createTeacherDocket() {\n\t\treturn new Docket(DocumentationType.SWAGGER_2).groupName(\"老师\").apiInfo(teacherApiInfo()).select()\n\t\t\t\t.apis(RequestHandlerSelectors.basePackage(\"pri.fly.leaning.controller.teacher\"))\n\t\t\t\t.paths(PathSelectors.any()).build();\n\t}\n```\n\n现在可以通过下拉列表切换不同的分组啦。\n![](http://palyboy.qiniudn.com/10.jpg)\n#### 注解分组\n**通过RequestHandlerSelectors.withClassAnnotation()指定扫描的包路径。**\n上文提到的路径分组是一种分组方式，但是这种分组的局限比较大，万一我们的代码中没有按照这种方式分包那就无法分组。下面介绍一个更灵活的方式：注解分组。\n仍然以学校管理系统为例，校长和老师都属于学校管理层，我们希望将他们放到同一个分组中。首先定义我们自己的分组注解。\n```java\n/**\n * 学校管理层分组注解\n * @author fly\n *\n */\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Inherited\npublic @interface Manager {\n\n}\n```\n在对应的Controller上加上注解\n```java\n@RestController\n@RequestMapping(\"/teacher/users\")\n@Api(description = \"老师班级管理接口\")\n@Manager\npublic class ClassController {\n\t....\n}\n@RestController\n@RequestMapping(\"/president/school\")\n@Api(description = \"校长学校管理接口\")\n@Manager\npublic class SchoolController {\n\t....\n}\n```\n配置Docket\n**核心：RequestHandlerSelectors.withClassAnnotation(Manager.class)**\n```java\n@Bean\npublic Docket createManagerDocket() {\n\treturn new Docket(DocumentationType.SWAGGER_2).groupName(\"管理者\").apiInfo(managerApiInfo()).select()\n\t\t\t.apis(RequestHandlerSelectors.withClassAnnotation(Manager.class))\n\t\t\t.paths(PathSelectors.any()).build();\n}\n```\n再次发布打开我们的在线文档，可以看到已经有管理员分组了。\n![](http://palyboy.qiniudn.com/11.png)\n注意：同一接口可以被包含在多个分组中。\n## 排序\n通过分组，我们的接口文档显得更加清晰了，但是还不够完美，同一分组下的接口仍然可能会有很多，我们希望能够对接口进行排序。举个例子，后台管理系统中，用户登陆后有一系列的菜单栏，前端开发希望我们的接口顺序能够和菜单栏一一匹配。\n![](http://palyboy.qiniudn.com/12.png)\n虽然Docket类中提供了一个排序方法 operationOrdering，但是实际上并不起作用！方法注释上也说了该方法并不起效果。多方搜索，在stackoverflow上看到了spring-swagger一个作者说可以通过tags进行排序（我现在找不到说这句话的具体地方了），几番实验终于成功。\n仍以学校管理系统为例，给老师增加一个班级学生的管理接口。\n![](http://palyboy.qiniudn.com/13.png)\n此时的管理者分组接口如下图：\n![](http://palyboy.qiniudn.com/14.png)\n这里的接口排序是 1.class 2.school 3.student，假设我们希望按照由大到小的方式排列（1.school 2.class 3.student），那么需要修改@Api注解中的tags属性。以SchoolController为例\n```java\n@RestController\n@RequestMapping(\"/president/school\")\n@Api(tags = {\"1.0.1\"},description = \"校长-学校管理接口\")\n@Manager\npublic class SchoolController {\n}\n```\n这时的管理者分组就达到我们期望的效果了。\n![](http://palyboy.qiniudn.com/15.png)\n\n注意：\n- tags尽量使用数字字母组合，当使用中文或tags过长时，会导致文档无法打开。\n- 当tags使用 1.0.1这种格式时，如果数字大于10,排序会有问题，如：10.0.1会排在1.0.1前面（因为tags排序是一位一位的比较），所以建议超过10的时候1用I代替，如下图![](http://palyboy.qiniudn.com/16.png)\n\n至此，一个完善的在线接口文档完成啦。\n\n","source":"_posts/springboot-swagger集成细节补充（二）.md","raw":"---\ntitle: springboot+swagger集成细节补充（二）\ndate: 2017-08-24 14:53:33\ncategories:\n- java进阶\ntags:\n  - java\n  - springboot\n  - swagger\n---\n通过上一章，我们可以搭建出一套比较好用的在线API文档了。这套文档刚开始使用起来非常方便，但是随着接口的增多，又会有问题暴露出来:文档显得越来越臃肿，查找会变得不方便。那么是不是可以根据业务的不同对文档进行分组?接口文档是不是可以按照一定的顺序进行排序？（譬如按照开发的顺序排列）\n<!-- more -->\n## 准备\n本文中的样例代码可参考：[https://github.com/BestRumbleCN/springboot-swagger](https://github.com/BestRumbleCN/springboot-swagger) 中的boot-swagger2。\n## 分组\nswagger2中接口分组非常简单，在我们的配置类Swagger2Config.java中，一个Docket就对应着一个分组，我们可以通过创建多个Docket对象实现分组。\n```java\n@Configuration\n@EnableSwagger2\npublic class Swagger2Config {\n\n\t@Bean\n\tpublic Docket createDocket() {\n\t\treturn new Docket(DocumentationType.SWAGGER_2).groupName(\"用户信息\").apiInfo(userApiInfo()).select()\n\t\t\t\t.apis(RequestHandlerSelectors.basePackage(\"pri.fly.leaning.controller\"))\n\t\t\t\t.paths(PathSelectors.any()).build();\n\t}\n\n\tprivate ApiInfo userApiInfo() {\n\t\treturn new ApiInfoBuilder().title(\"在线接口文档\").description(\"用户相关接口\").termsOfServiceUrl(\"http://localhost:8080\")\n\t\t\t\t.contact(new Contact(\"fly\", \"https://github.com/BestRumbleCN\", \"flyxie2009@foxmail.com\")).version(\"1.0\")\n\t\t\t\t.build();\n\t}\n\t\n\t//配置多个Docket实例\n\t@Bean\n\tpublic Docket createDocket2() {\n\t\t...\n\t}\n\n}\n\n```\n具体的分组方式主要有两种：1.通过路径分组 2.通过注解分组\n#### 路径分组\n**通过RequestHandlerSelectors.basePackage(\"\")指定扫描的包路径。**\n假设我们在做一个学校的管理系统，后台用户分为校长、老师、学生。我们可以按照如下的方式对controller进行细分。\n![](http://palyboy.qiniudn.com/9.png)\n在我们的Swagger2Config.java可以配置三个Docket\n```java\n\t@Bean\n\tpublic Docket createPresidentDocket() {\n\t\treturn new Docket(DocumentationType.SWAGGER_2).groupName(\"校长\").apiInfo(presidentApiInfo()).select()\n\t\t\t\t.apis(RequestHandlerSelectors.basePackage(\"pri.fly.leaning.controller.president\"))\n\t\t\t\t.paths(PathSelectors.any()).build();\n\t}\n\t\n\t@Bean\n\tpublic Docket createStudentDocket() {\n\t\treturn new Docket(DocumentationType.SWAGGER_2).groupName(\"学生\").apiInfo(studentApiInfo()).select()\n\t\t\t\t.apis(RequestHandlerSelectors.basePackage(\"pri.fly.leaning.controller.student\"))\n\t\t\t\t.paths(PathSelectors.any()).build();\n\t}\n\n\t@Bean\n\tpublic Docket createTeacherDocket() {\n\t\treturn new Docket(DocumentationType.SWAGGER_2).groupName(\"老师\").apiInfo(teacherApiInfo()).select()\n\t\t\t\t.apis(RequestHandlerSelectors.basePackage(\"pri.fly.leaning.controller.teacher\"))\n\t\t\t\t.paths(PathSelectors.any()).build();\n\t}\n```\n\n现在可以通过下拉列表切换不同的分组啦。\n![](http://palyboy.qiniudn.com/10.jpg)\n#### 注解分组\n**通过RequestHandlerSelectors.withClassAnnotation()指定扫描的包路径。**\n上文提到的路径分组是一种分组方式，但是这种分组的局限比较大，万一我们的代码中没有按照这种方式分包那就无法分组。下面介绍一个更灵活的方式：注解分组。\n仍然以学校管理系统为例，校长和老师都属于学校管理层，我们希望将他们放到同一个分组中。首先定义我们自己的分组注解。\n```java\n/**\n * 学校管理层分组注解\n * @author fly\n *\n */\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Inherited\npublic @interface Manager {\n\n}\n```\n在对应的Controller上加上注解\n```java\n@RestController\n@RequestMapping(\"/teacher/users\")\n@Api(description = \"老师班级管理接口\")\n@Manager\npublic class ClassController {\n\t....\n}\n@RestController\n@RequestMapping(\"/president/school\")\n@Api(description = \"校长学校管理接口\")\n@Manager\npublic class SchoolController {\n\t....\n}\n```\n配置Docket\n**核心：RequestHandlerSelectors.withClassAnnotation(Manager.class)**\n```java\n@Bean\npublic Docket createManagerDocket() {\n\treturn new Docket(DocumentationType.SWAGGER_2).groupName(\"管理者\").apiInfo(managerApiInfo()).select()\n\t\t\t.apis(RequestHandlerSelectors.withClassAnnotation(Manager.class))\n\t\t\t.paths(PathSelectors.any()).build();\n}\n```\n再次发布打开我们的在线文档，可以看到已经有管理员分组了。\n![](http://palyboy.qiniudn.com/11.png)\n注意：同一接口可以被包含在多个分组中。\n## 排序\n通过分组，我们的接口文档显得更加清晰了，但是还不够完美，同一分组下的接口仍然可能会有很多，我们希望能够对接口进行排序。举个例子，后台管理系统中，用户登陆后有一系列的菜单栏，前端开发希望我们的接口顺序能够和菜单栏一一匹配。\n![](http://palyboy.qiniudn.com/12.png)\n虽然Docket类中提供了一个排序方法 operationOrdering，但是实际上并不起作用！方法注释上也说了该方法并不起效果。多方搜索，在stackoverflow上看到了spring-swagger一个作者说可以通过tags进行排序（我现在找不到说这句话的具体地方了），几番实验终于成功。\n仍以学校管理系统为例，给老师增加一个班级学生的管理接口。\n![](http://palyboy.qiniudn.com/13.png)\n此时的管理者分组接口如下图：\n![](http://palyboy.qiniudn.com/14.png)\n这里的接口排序是 1.class 2.school 3.student，假设我们希望按照由大到小的方式排列（1.school 2.class 3.student），那么需要修改@Api注解中的tags属性。以SchoolController为例\n```java\n@RestController\n@RequestMapping(\"/president/school\")\n@Api(tags = {\"1.0.1\"},description = \"校长-学校管理接口\")\n@Manager\npublic class SchoolController {\n}\n```\n这时的管理者分组就达到我们期望的效果了。\n![](http://palyboy.qiniudn.com/15.png)\n\n注意：\n- tags尽量使用数字字母组合，当使用中文或tags过长时，会导致文档无法打开。\n- 当tags使用 1.0.1这种格式时，如果数字大于10,排序会有问题，如：10.0.1会排在1.0.1前面（因为tags排序是一位一位的比较），所以建议超过10的时候1用I代替，如下图![](http://palyboy.qiniudn.com/16.png)\n\n至此，一个完善的在线接口文档完成啦。\n\n","slug":"springboot-swagger集成细节补充（二）","published":1,"updated":"2019-04-06T14:52:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjuigrwcf00039f3e7c8w40yo","content":"<p>通过上一章，我们可以搭建出一套比较好用的在线API文档了。这套文档刚开始使用起来非常方便，但是随着接口的增多，又会有问题暴露出来:文档显得越来越臃肿，查找会变得不方便。那么是不是可以根据业务的不同对文档进行分组?接口文档是不是可以按照一定的顺序进行排序？（譬如按照开发的顺序排列）<br><a id=\"more\"></a></p>\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><p>本文中的样例代码可参考：<a href=\"https://github.com/BestRumbleCN/springboot-swagger\" target=\"_blank\" rel=\"noopener\">https://github.com/BestRumbleCN/springboot-swagger</a> 中的boot-swagger2。</p>\n<h2 id=\"分组\"><a href=\"#分组\" class=\"headerlink\" title=\"分组\"></a>分组</h2><p>swagger2中接口分组非常简单，在我们的配置类Swagger2Config.java中，一个Docket就对应着一个分组，我们可以通过创建多个Docket对象实现分组。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableSwagger</span>2</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Swagger2Config</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Bean</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Docket <span class=\"title\">createDocket</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Docket(DocumentationType.SWAGGER_2).groupName(<span class=\"string\">\"用户信息\"</span>).apiInfo(userApiInfo()).select()</span><br><span class=\"line\">\t\t\t\t.apis(RequestHandlerSelectors.basePackage(<span class=\"string\">\"pri.fly.leaning.controller\"</span>))</span><br><span class=\"line\">\t\t\t\t.paths(PathSelectors.any()).build();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> ApiInfo <span class=\"title\">userApiInfo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ApiInfoBuilder().title(<span class=\"string\">\"在线接口文档\"</span>).description(<span class=\"string\">\"用户相关接口\"</span>).termsOfServiceUrl(<span class=\"string\">\"http://localhost:8080\"</span>)</span><br><span class=\"line\">\t\t\t\t.contact(<span class=\"keyword\">new</span> Contact(<span class=\"string\">\"fly\"</span>, <span class=\"string\">\"https://github.com/BestRumbleCN\"</span>, <span class=\"string\">\"flyxie2009@foxmail.com\"</span>)).version(<span class=\"string\">\"1.0\"</span>)</span><br><span class=\"line\">\t\t\t\t.build();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//配置多个Docket实例</span></span><br><span class=\"line\">\t<span class=\"meta\">@Bean</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Docket <span class=\"title\">createDocket2</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t...</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>具体的分组方式主要有两种：1.通过路径分组 2.通过注解分组</p>\n<h4 id=\"路径分组\"><a href=\"#路径分组\" class=\"headerlink\" title=\"路径分组\"></a>路径分组</h4><p><strong>通过RequestHandlerSelectors.basePackage(“”)指定扫描的包路径。</strong><br>假设我们在做一个学校的管理系统，后台用户分为校长、老师、学生。我们可以按照如下的方式对controller进行细分。<br><img src=\"http://palyboy.qiniudn.com/9.png\" alt><br>在我们的Swagger2Config.java可以配置三个Docket<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Docket <span class=\"title\">createPresidentDocket</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Docket(DocumentationType.SWAGGER_2).groupName(<span class=\"string\">\"校长\"</span>).apiInfo(presidentApiInfo()).select()</span><br><span class=\"line\">\t\t\t.apis(RequestHandlerSelectors.basePackage(<span class=\"string\">\"pri.fly.leaning.controller.president\"</span>))</span><br><span class=\"line\">\t\t\t.paths(PathSelectors.any()).build();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Docket <span class=\"title\">createStudentDocket</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Docket(DocumentationType.SWAGGER_2).groupName(<span class=\"string\">\"学生\"</span>).apiInfo(studentApiInfo()).select()</span><br><span class=\"line\">\t\t\t.apis(RequestHandlerSelectors.basePackage(<span class=\"string\">\"pri.fly.leaning.controller.student\"</span>))</span><br><span class=\"line\">\t\t\t.paths(PathSelectors.any()).build();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Docket <span class=\"title\">createTeacherDocket</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Docket(DocumentationType.SWAGGER_2).groupName(<span class=\"string\">\"老师\"</span>).apiInfo(teacherApiInfo()).select()</span><br><span class=\"line\">\t\t\t.apis(RequestHandlerSelectors.basePackage(<span class=\"string\">\"pri.fly.leaning.controller.teacher\"</span>))</span><br><span class=\"line\">\t\t\t.paths(PathSelectors.any()).build();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>现在可以通过下拉列表切换不同的分组啦。<br><img src=\"http://palyboy.qiniudn.com/10.jpg\" alt></p>\n<h4 id=\"注解分组\"><a href=\"#注解分组\" class=\"headerlink\" title=\"注解分组\"></a>注解分组</h4><p><strong>通过RequestHandlerSelectors.withClassAnnotation()指定扫描的包路径。</strong><br>上文提到的路径分组是一种分组方式，但是这种分组的局限比较大，万一我们的代码中没有按照这种方式分包那就无法分组。下面介绍一个更灵活的方式：注解分组。<br>仍然以学校管理系统为例，校长和老师都属于学校管理层，我们希望将他们放到同一个分组中。首先定义我们自己的分组注解。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 学校管理层分组注解</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> fly</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Target</span>(ElementType.TYPE)</span><br><span class=\"line\"><span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"meta\">@Inherited</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> Manager &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在对应的Controller上加上注解<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/teacher/users\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@Api</span>(description = <span class=\"string\">\"老师班级管理接口\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@Manager</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ClassController</span> </span>&#123;</span><br><span class=\"line\">\t....</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/president/school\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@Api</span>(description = <span class=\"string\">\"校长学校管理接口\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@Manager</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SchoolController</span> </span>&#123;</span><br><span class=\"line\">\t....</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>配置Docket<br><strong>核心：RequestHandlerSelectors.withClassAnnotation(Manager.class)</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Docket <span class=\"title\">createManagerDocket</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Docket(DocumentationType.SWAGGER_2).groupName(<span class=\"string\">\"管理者\"</span>).apiInfo(managerApiInfo()).select()</span><br><span class=\"line\">\t\t\t.apis(RequestHandlerSelectors.withClassAnnotation(Manager.class))</span><br><span class=\"line\">\t\t\t.paths(PathSelectors.any()).build();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>再次发布打开我们的在线文档，可以看到已经有管理员分组了。<br><img src=\"http://palyboy.qiniudn.com/11.png\" alt><br>注意：同一接口可以被包含在多个分组中。</p>\n<h2 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h2><p>通过分组，我们的接口文档显得更加清晰了，但是还不够完美，同一分组下的接口仍然可能会有很多，我们希望能够对接口进行排序。举个例子，后台管理系统中，用户登陆后有一系列的菜单栏，前端开发希望我们的接口顺序能够和菜单栏一一匹配。<br><img src=\"http://palyboy.qiniudn.com/12.png\" alt><br>虽然Docket类中提供了一个排序方法 operationOrdering，但是实际上并不起作用！方法注释上也说了该方法并不起效果。多方搜索，在stackoverflow上看到了spring-swagger一个作者说可以通过tags进行排序（我现在找不到说这句话的具体地方了），几番实验终于成功。<br>仍以学校管理系统为例，给老师增加一个班级学生的管理接口。<br><img src=\"http://palyboy.qiniudn.com/13.png\" alt><br>此时的管理者分组接口如下图：<br><img src=\"http://palyboy.qiniudn.com/14.png\" alt><br>这里的接口排序是 1.class 2.school 3.student，假设我们希望按照由大到小的方式排列（1.school 2.class 3.student），那么需要修改@Api注解中的tags属性。以SchoolController为例<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/president/school\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@Api</span>(tags = &#123;<span class=\"string\">\"1.0.1\"</span>&#125;,description = <span class=\"string\">\"校长-学校管理接口\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@Manager</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SchoolController</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这时的管理者分组就达到我们期望的效果了。<br><img src=\"http://palyboy.qiniudn.com/15.png\" alt></p>\n<p>注意：</p>\n<ul>\n<li>tags尽量使用数字字母组合，当使用中文或tags过长时，会导致文档无法打开。</li>\n<li>当tags使用 1.0.1这种格式时，如果数字大于10,排序会有问题，如：10.0.1会排在1.0.1前面（因为tags排序是一位一位的比较），所以建议超过10的时候1用I代替，如下图<img src=\"http://palyboy.qiniudn.com/16.png\" alt></li>\n</ul>\n<p>至此，一个完善的在线接口文档完成啦。</p>\n","site":{"data":{}},"excerpt":"<p>通过上一章，我们可以搭建出一套比较好用的在线API文档了。这套文档刚开始使用起来非常方便，但是随着接口的增多，又会有问题暴露出来:文档显得越来越臃肿，查找会变得不方便。那么是不是可以根据业务的不同对文档进行分组?接口文档是不是可以按照一定的顺序进行排序？（譬如按照开发的顺序排列）<br>","more":"</p>\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><p>本文中的样例代码可参考：<a href=\"https://github.com/BestRumbleCN/springboot-swagger\" target=\"_blank\" rel=\"noopener\">https://github.com/BestRumbleCN/springboot-swagger</a> 中的boot-swagger2。</p>\n<h2 id=\"分组\"><a href=\"#分组\" class=\"headerlink\" title=\"分组\"></a>分组</h2><p>swagger2中接口分组非常简单，在我们的配置类Swagger2Config.java中，一个Docket就对应着一个分组，我们可以通过创建多个Docket对象实现分组。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableSwagger</span>2</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Swagger2Config</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Bean</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Docket <span class=\"title\">createDocket</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Docket(DocumentationType.SWAGGER_2).groupName(<span class=\"string\">\"用户信息\"</span>).apiInfo(userApiInfo()).select()</span><br><span class=\"line\">\t\t\t\t.apis(RequestHandlerSelectors.basePackage(<span class=\"string\">\"pri.fly.leaning.controller\"</span>))</span><br><span class=\"line\">\t\t\t\t.paths(PathSelectors.any()).build();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> ApiInfo <span class=\"title\">userApiInfo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ApiInfoBuilder().title(<span class=\"string\">\"在线接口文档\"</span>).description(<span class=\"string\">\"用户相关接口\"</span>).termsOfServiceUrl(<span class=\"string\">\"http://localhost:8080\"</span>)</span><br><span class=\"line\">\t\t\t\t.contact(<span class=\"keyword\">new</span> Contact(<span class=\"string\">\"fly\"</span>, <span class=\"string\">\"https://github.com/BestRumbleCN\"</span>, <span class=\"string\">\"flyxie2009@foxmail.com\"</span>)).version(<span class=\"string\">\"1.0\"</span>)</span><br><span class=\"line\">\t\t\t\t.build();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//配置多个Docket实例</span></span><br><span class=\"line\">\t<span class=\"meta\">@Bean</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Docket <span class=\"title\">createDocket2</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t...</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>具体的分组方式主要有两种：1.通过路径分组 2.通过注解分组</p>\n<h4 id=\"路径分组\"><a href=\"#路径分组\" class=\"headerlink\" title=\"路径分组\"></a>路径分组</h4><p><strong>通过RequestHandlerSelectors.basePackage(“”)指定扫描的包路径。</strong><br>假设我们在做一个学校的管理系统，后台用户分为校长、老师、学生。我们可以按照如下的方式对controller进行细分。<br><img src=\"http://palyboy.qiniudn.com/9.png\" alt><br>在我们的Swagger2Config.java可以配置三个Docket<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Docket <span class=\"title\">createPresidentDocket</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Docket(DocumentationType.SWAGGER_2).groupName(<span class=\"string\">\"校长\"</span>).apiInfo(presidentApiInfo()).select()</span><br><span class=\"line\">\t\t\t.apis(RequestHandlerSelectors.basePackage(<span class=\"string\">\"pri.fly.leaning.controller.president\"</span>))</span><br><span class=\"line\">\t\t\t.paths(PathSelectors.any()).build();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Docket <span class=\"title\">createStudentDocket</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Docket(DocumentationType.SWAGGER_2).groupName(<span class=\"string\">\"学生\"</span>).apiInfo(studentApiInfo()).select()</span><br><span class=\"line\">\t\t\t.apis(RequestHandlerSelectors.basePackage(<span class=\"string\">\"pri.fly.leaning.controller.student\"</span>))</span><br><span class=\"line\">\t\t\t.paths(PathSelectors.any()).build();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Docket <span class=\"title\">createTeacherDocket</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Docket(DocumentationType.SWAGGER_2).groupName(<span class=\"string\">\"老师\"</span>).apiInfo(teacherApiInfo()).select()</span><br><span class=\"line\">\t\t\t.apis(RequestHandlerSelectors.basePackage(<span class=\"string\">\"pri.fly.leaning.controller.teacher\"</span>))</span><br><span class=\"line\">\t\t\t.paths(PathSelectors.any()).build();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>现在可以通过下拉列表切换不同的分组啦。<br><img src=\"http://palyboy.qiniudn.com/10.jpg\" alt></p>\n<h4 id=\"注解分组\"><a href=\"#注解分组\" class=\"headerlink\" title=\"注解分组\"></a>注解分组</h4><p><strong>通过RequestHandlerSelectors.withClassAnnotation()指定扫描的包路径。</strong><br>上文提到的路径分组是一种分组方式，但是这种分组的局限比较大，万一我们的代码中没有按照这种方式分包那就无法分组。下面介绍一个更灵活的方式：注解分组。<br>仍然以学校管理系统为例，校长和老师都属于学校管理层，我们希望将他们放到同一个分组中。首先定义我们自己的分组注解。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 学校管理层分组注解</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> fly</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Target</span>(ElementType.TYPE)</span><br><span class=\"line\"><span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"meta\">@Inherited</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> Manager &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在对应的Controller上加上注解<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/teacher/users\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@Api</span>(description = <span class=\"string\">\"老师班级管理接口\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@Manager</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ClassController</span> </span>&#123;</span><br><span class=\"line\">\t....</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/president/school\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@Api</span>(description = <span class=\"string\">\"校长学校管理接口\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@Manager</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SchoolController</span> </span>&#123;</span><br><span class=\"line\">\t....</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>配置Docket<br><strong>核心：RequestHandlerSelectors.withClassAnnotation(Manager.class)</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Docket <span class=\"title\">createManagerDocket</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Docket(DocumentationType.SWAGGER_2).groupName(<span class=\"string\">\"管理者\"</span>).apiInfo(managerApiInfo()).select()</span><br><span class=\"line\">\t\t\t.apis(RequestHandlerSelectors.withClassAnnotation(Manager.class))</span><br><span class=\"line\">\t\t\t.paths(PathSelectors.any()).build();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>再次发布打开我们的在线文档，可以看到已经有管理员分组了。<br><img src=\"http://palyboy.qiniudn.com/11.png\" alt><br>注意：同一接口可以被包含在多个分组中。</p>\n<h2 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h2><p>通过分组，我们的接口文档显得更加清晰了，但是还不够完美，同一分组下的接口仍然可能会有很多，我们希望能够对接口进行排序。举个例子，后台管理系统中，用户登陆后有一系列的菜单栏，前端开发希望我们的接口顺序能够和菜单栏一一匹配。<br><img src=\"http://palyboy.qiniudn.com/12.png\" alt><br>虽然Docket类中提供了一个排序方法 operationOrdering，但是实际上并不起作用！方法注释上也说了该方法并不起效果。多方搜索，在stackoverflow上看到了spring-swagger一个作者说可以通过tags进行排序（我现在找不到说这句话的具体地方了），几番实验终于成功。<br>仍以学校管理系统为例，给老师增加一个班级学生的管理接口。<br><img src=\"http://palyboy.qiniudn.com/13.png\" alt><br>此时的管理者分组接口如下图：<br><img src=\"http://palyboy.qiniudn.com/14.png\" alt><br>这里的接口排序是 1.class 2.school 3.student，假设我们希望按照由大到小的方式排列（1.school 2.class 3.student），那么需要修改@Api注解中的tags属性。以SchoolController为例<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/president/school\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@Api</span>(tags = &#123;<span class=\"string\">\"1.0.1\"</span>&#125;,description = <span class=\"string\">\"校长-学校管理接口\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@Manager</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SchoolController</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这时的管理者分组就达到我们期望的效果了。<br><img src=\"http://palyboy.qiniudn.com/15.png\" alt></p>\n<p>注意：</p>\n<ul>\n<li>tags尽量使用数字字母组合，当使用中文或tags过长时，会导致文档无法打开。</li>\n<li>当tags使用 1.0.1这种格式时，如果数字大于10,排序会有问题，如：10.0.1会排在1.0.1前面（因为tags排序是一位一位的比较），所以建议超过10的时候1用I代替，如下图<img src=\"http://palyboy.qiniudn.com/16.png\" alt></li>\n</ul>\n<p>至此，一个完善的在线接口文档完成啦。</p>"},{"title":"springboot+swagger集成细节补充（一）","date":"2017-08-22T12:04:53.000Z","_content":"网上有很多springboot集成swagger的例子，但基本都是简单的demo，在实际的开发中无法给出更多的参考价值。特别是当接口数量越来越多的时候，会碰到以下几个问题：\n① 针对各种不同的接口传参方式及返回格式，该如何去写？\n② 当接口文档中的接口越来越多时，能不能做分组，方便更好地查？\n③ 是否可以对各个接口进行排序？\n本系列博文将针对以上问题分为三章：\n第一章介绍详细的swagger使用及解决问题①；\n第二章解决问题②问题③；\n第三章介绍下基于springboot-starter封装我们自己的swagger-starter。\n<!-- more -->\n## 准备\n网上有一篇介绍springboot集成swagger的文章我觉得写的特别好：[http://www.jianshu.com/p/8033ef83a8ed](http://www.jianshu.com/p/8033ef83a8ed \"Spring Boot中使用Swagger2构建强大的RESTful API文档\") ，非常适合入门使用，本文主要是该篇文章的补充。\n本文中的样例代码可参考：[https://github.com/BestRumbleCN/springboot-swagger](https://github.com/BestRumbleCN/springboot-swagger) 中的boot-swagger1。\n## 使用详解\n#### 类上注解 @Api\n@Api 主要使用于接口controller类上，可以不加，但当不加时，生成的在线文档接口目录会使用默认的controller名称，如下图：\n![](http://palyboy.qiniudn.com/1.png)\n不够直观也不美观。推荐加上，@ApiModel中有两个属性建议设置值：description和tags。其中description作用于文档目录后缀名，tags作用于文档目录前缀名，都加上以后对应的文档如下图。\n![](http://palyboy.qiniudn.com/3.png)\n![](http://palyboy.qiniudn.com/2.png)\ntags还有一个重要的排序功能，将在下篇文章中具体体现。\n\n#### 方法上注解 @ApiImplicitParams 等\n\n首先看一下常见的加了swagger注解的接口方法：\n@ApiOperation 为接口的描述，@ApiImplicitParams 为多参数的数组聚合，@ApiImplicitParam为具体的各个参数的描述，@ApiImplicitParam中有5个常用的属性：\n① name ： 参数名称\n② value ： 参数描述\n③ dataType: 参数类型 这里支持常用的基础数据类型 String long int boolean等。\n④ required: 是否必填\n⑤ defaultValue：文档中默认填写的值\n⑥ paramType : 传参方式。支持：path query body header form，**注意这里的传参方式一定要和方法中的springmvc传参注解保持一致**，不然接口文档会生成两个名称相同但是传参方式不同的参数。\n![](http://palyboy.qiniudn.com/5.png)\n\n#### 入参对象及返回对象上注解\nswagger针对返回值对象和入参（responseBody方式传入）对象，都会自动解析生成对应的json结构。\n![](http://palyboy.qiniudn.com/6.png)\n但是这还是不够的，我们希望能加上针对具体字段的描述。那么我们可以使用@ApiModel和@ApiModelProperty，以下是具体的代码。\n![](http://palyboy.qiniudn.com/7.png)\n对应的接口文档，我们点击model,可以看到\n![](http://palyboy.qiniudn.com/8.png)\n当然@ApiModelProperty还有许多使用的参数可以使用，可以在实践中慢慢探索，譬如sample，可以提供具体的参数样例。\n至此，一个比较完善的在线接口文档完成啦。","source":"_posts/springboot-swagger集成详解（一）.md","raw":"---\ntitle: springboot+swagger集成细节补充（一）\ndate: 2017-08-22 20:04:53\ncategories:\n- java进阶\ntags:\n  - java\n  - springboot\n  - swagger\n---\n网上有很多springboot集成swagger的例子，但基本都是简单的demo，在实际的开发中无法给出更多的参考价值。特别是当接口数量越来越多的时候，会碰到以下几个问题：\n① 针对各种不同的接口传参方式及返回格式，该如何去写？\n② 当接口文档中的接口越来越多时，能不能做分组，方便更好地查？\n③ 是否可以对各个接口进行排序？\n本系列博文将针对以上问题分为三章：\n第一章介绍详细的swagger使用及解决问题①；\n第二章解决问题②问题③；\n第三章介绍下基于springboot-starter封装我们自己的swagger-starter。\n<!-- more -->\n## 准备\n网上有一篇介绍springboot集成swagger的文章我觉得写的特别好：[http://www.jianshu.com/p/8033ef83a8ed](http://www.jianshu.com/p/8033ef83a8ed \"Spring Boot中使用Swagger2构建强大的RESTful API文档\") ，非常适合入门使用，本文主要是该篇文章的补充。\n本文中的样例代码可参考：[https://github.com/BestRumbleCN/springboot-swagger](https://github.com/BestRumbleCN/springboot-swagger) 中的boot-swagger1。\n## 使用详解\n#### 类上注解 @Api\n@Api 主要使用于接口controller类上，可以不加，但当不加时，生成的在线文档接口目录会使用默认的controller名称，如下图：\n![](http://palyboy.qiniudn.com/1.png)\n不够直观也不美观。推荐加上，@ApiModel中有两个属性建议设置值：description和tags。其中description作用于文档目录后缀名，tags作用于文档目录前缀名，都加上以后对应的文档如下图。\n![](http://palyboy.qiniudn.com/3.png)\n![](http://palyboy.qiniudn.com/2.png)\ntags还有一个重要的排序功能，将在下篇文章中具体体现。\n\n#### 方法上注解 @ApiImplicitParams 等\n\n首先看一下常见的加了swagger注解的接口方法：\n@ApiOperation 为接口的描述，@ApiImplicitParams 为多参数的数组聚合，@ApiImplicitParam为具体的各个参数的描述，@ApiImplicitParam中有5个常用的属性：\n① name ： 参数名称\n② value ： 参数描述\n③ dataType: 参数类型 这里支持常用的基础数据类型 String long int boolean等。\n④ required: 是否必填\n⑤ defaultValue：文档中默认填写的值\n⑥ paramType : 传参方式。支持：path query body header form，**注意这里的传参方式一定要和方法中的springmvc传参注解保持一致**，不然接口文档会生成两个名称相同但是传参方式不同的参数。\n![](http://palyboy.qiniudn.com/5.png)\n\n#### 入参对象及返回对象上注解\nswagger针对返回值对象和入参（responseBody方式传入）对象，都会自动解析生成对应的json结构。\n![](http://palyboy.qiniudn.com/6.png)\n但是这还是不够的，我们希望能加上针对具体字段的描述。那么我们可以使用@ApiModel和@ApiModelProperty，以下是具体的代码。\n![](http://palyboy.qiniudn.com/7.png)\n对应的接口文档，我们点击model,可以看到\n![](http://palyboy.qiniudn.com/8.png)\n当然@ApiModelProperty还有许多使用的参数可以使用，可以在实践中慢慢探索，譬如sample，可以提供具体的参数样例。\n至此，一个比较完善的在线接口文档完成啦。","slug":"springboot-swagger集成详解（一）","published":1,"updated":"2019-04-06T14:52:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjuigrwck00079f3eor1ms9ie","content":"<p>网上有很多springboot集成swagger的例子，但基本都是简单的demo，在实际的开发中无法给出更多的参考价值。特别是当接口数量越来越多的时候，会碰到以下几个问题：<br>① 针对各种不同的接口传参方式及返回格式，该如何去写？<br>② 当接口文档中的接口越来越多时，能不能做分组，方便更好地查？<br>③ 是否可以对各个接口进行排序？<br>本系列博文将针对以上问题分为三章：<br>第一章介绍详细的swagger使用及解决问题①；<br>第二章解决问题②问题③；<br>第三章介绍下基于springboot-starter封装我们自己的swagger-starter。<br><a id=\"more\"></a></p>\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><p>网上有一篇介绍springboot集成swagger的文章我觉得写的特别好：<a href=\"http://www.jianshu.com/p/8033ef83a8ed\" title=\"Spring Boot中使用Swagger2构建强大的RESTful API文档\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/8033ef83a8ed</a> ，非常适合入门使用，本文主要是该篇文章的补充。<br>本文中的样例代码可参考：<a href=\"https://github.com/BestRumbleCN/springboot-swagger\" target=\"_blank\" rel=\"noopener\">https://github.com/BestRumbleCN/springboot-swagger</a> 中的boot-swagger1。</p>\n<h2 id=\"使用详解\"><a href=\"#使用详解\" class=\"headerlink\" title=\"使用详解\"></a>使用详解</h2><h4 id=\"类上注解-Api\"><a href=\"#类上注解-Api\" class=\"headerlink\" title=\"类上注解 @Api\"></a>类上注解 @Api</h4><p>@Api 主要使用于接口controller类上，可以不加，但当不加时，生成的在线文档接口目录会使用默认的controller名称，如下图：<br><img src=\"http://palyboy.qiniudn.com/1.png\" alt><br>不够直观也不美观。推荐加上，@ApiModel中有两个属性建议设置值：description和tags。其中description作用于文档目录后缀名，tags作用于文档目录前缀名，都加上以后对应的文档如下图。<br><img src=\"http://palyboy.qiniudn.com/3.png\" alt><br><img src=\"http://palyboy.qiniudn.com/2.png\" alt><br>tags还有一个重要的排序功能，将在下篇文章中具体体现。</p>\n<h4 id=\"方法上注解-ApiImplicitParams-等\"><a href=\"#方法上注解-ApiImplicitParams-等\" class=\"headerlink\" title=\"方法上注解 @ApiImplicitParams 等\"></a>方法上注解 @ApiImplicitParams 等</h4><p>首先看一下常见的加了swagger注解的接口方法：<br>@ApiOperation 为接口的描述，@ApiImplicitParams 为多参数的数组聚合，@ApiImplicitParam为具体的各个参数的描述，@ApiImplicitParam中有5个常用的属性：<br>① name ： 参数名称<br>② value ： 参数描述<br>③ dataType: 参数类型 这里支持常用的基础数据类型 String long int boolean等。<br>④ required: 是否必填<br>⑤ defaultValue：文档中默认填写的值<br>⑥ paramType : 传参方式。支持：path query body header form，<strong>注意这里的传参方式一定要和方法中的springmvc传参注解保持一致</strong>，不然接口文档会生成两个名称相同但是传参方式不同的参数。<br><img src=\"http://palyboy.qiniudn.com/5.png\" alt></p>\n<h4 id=\"入参对象及返回对象上注解\"><a href=\"#入参对象及返回对象上注解\" class=\"headerlink\" title=\"入参对象及返回对象上注解\"></a>入参对象及返回对象上注解</h4><p>swagger针对返回值对象和入参（responseBody方式传入）对象，都会自动解析生成对应的json结构。<br><img src=\"http://palyboy.qiniudn.com/6.png\" alt><br>但是这还是不够的，我们希望能加上针对具体字段的描述。那么我们可以使用@ApiModel和@ApiModelProperty，以下是具体的代码。<br><img src=\"http://palyboy.qiniudn.com/7.png\" alt><br>对应的接口文档，我们点击model,可以看到<br><img src=\"http://palyboy.qiniudn.com/8.png\" alt><br>当然@ApiModelProperty还有许多使用的参数可以使用，可以在实践中慢慢探索，譬如sample，可以提供具体的参数样例。<br>至此，一个比较完善的在线接口文档完成啦。</p>\n","site":{"data":{}},"excerpt":"<p>网上有很多springboot集成swagger的例子，但基本都是简单的demo，在实际的开发中无法给出更多的参考价值。特别是当接口数量越来越多的时候，会碰到以下几个问题：<br>① 针对各种不同的接口传参方式及返回格式，该如何去写？<br>② 当接口文档中的接口越来越多时，能不能做分组，方便更好地查？<br>③ 是否可以对各个接口进行排序？<br>本系列博文将针对以上问题分为三章：<br>第一章介绍详细的swagger使用及解决问题①；<br>第二章解决问题②问题③；<br>第三章介绍下基于springboot-starter封装我们自己的swagger-starter。<br>","more":"</p>\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><p>网上有一篇介绍springboot集成swagger的文章我觉得写的特别好：<a href=\"http://www.jianshu.com/p/8033ef83a8ed\" title=\"Spring Boot中使用Swagger2构建强大的RESTful API文档\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/8033ef83a8ed</a> ，非常适合入门使用，本文主要是该篇文章的补充。<br>本文中的样例代码可参考：<a href=\"https://github.com/BestRumbleCN/springboot-swagger\" target=\"_blank\" rel=\"noopener\">https://github.com/BestRumbleCN/springboot-swagger</a> 中的boot-swagger1。</p>\n<h2 id=\"使用详解\"><a href=\"#使用详解\" class=\"headerlink\" title=\"使用详解\"></a>使用详解</h2><h4 id=\"类上注解-Api\"><a href=\"#类上注解-Api\" class=\"headerlink\" title=\"类上注解 @Api\"></a>类上注解 @Api</h4><p>@Api 主要使用于接口controller类上，可以不加，但当不加时，生成的在线文档接口目录会使用默认的controller名称，如下图：<br><img src=\"http://palyboy.qiniudn.com/1.png\" alt><br>不够直观也不美观。推荐加上，@ApiModel中有两个属性建议设置值：description和tags。其中description作用于文档目录后缀名，tags作用于文档目录前缀名，都加上以后对应的文档如下图。<br><img src=\"http://palyboy.qiniudn.com/3.png\" alt><br><img src=\"http://palyboy.qiniudn.com/2.png\" alt><br>tags还有一个重要的排序功能，将在下篇文章中具体体现。</p>\n<h4 id=\"方法上注解-ApiImplicitParams-等\"><a href=\"#方法上注解-ApiImplicitParams-等\" class=\"headerlink\" title=\"方法上注解 @ApiImplicitParams 等\"></a>方法上注解 @ApiImplicitParams 等</h4><p>首先看一下常见的加了swagger注解的接口方法：<br>@ApiOperation 为接口的描述，@ApiImplicitParams 为多参数的数组聚合，@ApiImplicitParam为具体的各个参数的描述，@ApiImplicitParam中有5个常用的属性：<br>① name ： 参数名称<br>② value ： 参数描述<br>③ dataType: 参数类型 这里支持常用的基础数据类型 String long int boolean等。<br>④ required: 是否必填<br>⑤ defaultValue：文档中默认填写的值<br>⑥ paramType : 传参方式。支持：path query body header form，<strong>注意这里的传参方式一定要和方法中的springmvc传参注解保持一致</strong>，不然接口文档会生成两个名称相同但是传参方式不同的参数。<br><img src=\"http://palyboy.qiniudn.com/5.png\" alt></p>\n<h4 id=\"入参对象及返回对象上注解\"><a href=\"#入参对象及返回对象上注解\" class=\"headerlink\" title=\"入参对象及返回对象上注解\"></a>入参对象及返回对象上注解</h4><p>swagger针对返回值对象和入参（responseBody方式传入）对象，都会自动解析生成对应的json结构。<br><img src=\"http://palyboy.qiniudn.com/6.png\" alt><br>但是这还是不够的，我们希望能加上针对具体字段的描述。那么我们可以使用@ApiModel和@ApiModelProperty，以下是具体的代码。<br><img src=\"http://palyboy.qiniudn.com/7.png\" alt><br>对应的接口文档，我们点击model,可以看到<br><img src=\"http://palyboy.qiniudn.com/8.png\" alt><br>当然@ApiModelProperty还有许多使用的参数可以使用，可以在实践中慢慢探索，譬如sample，可以提供具体的参数样例。<br>至此，一个比较完善的在线接口文档完成啦。</p>"},{"title":"记一次rm -f /*","date":"2019-04-15T13:46:29.000Z","_content":"最近在做jmeter性能压测，每次运行前都要手动删除上一次生成的数据，跑完还要手动kill掉jmeter进程，所以就想写个shell脚本，一次性执行所有这些操作。\n其中删除数据的脚本我写成了下面这样：\n\n```bash\nfile_path = /jproject/result\nrm -f ${fiel_path}/*\n```\n在shell脚本里，${param}如果没有取到值会直接变成空字符串，于是第二条命令喜闻乐见的被解析成了:\n```\nrm -f /*\n```\n如果在命令行里直接敲上面的命令，好歹还会提示是否删除，但是在脚本里面则不会。从删库到跑路，真刺激。\n### 总结：\n#### 1.对shell脚本太不熟悉。\n#### 2.缺乏对'rm -rf /*'的敬畏之心。\n\n","source":"_posts/记一次rm-f.md","raw":"---\ntitle: 记一次rm -f /*\ndate: 2019-04-15 21:46:29\ntags:\n---\n最近在做jmeter性能压测，每次运行前都要手动删除上一次生成的数据，跑完还要手动kill掉jmeter进程，所以就想写个shell脚本，一次性执行所有这些操作。\n其中删除数据的脚本我写成了下面这样：\n\n```bash\nfile_path = /jproject/result\nrm -f ${fiel_path}/*\n```\n在shell脚本里，${param}如果没有取到值会直接变成空字符串，于是第二条命令喜闻乐见的被解析成了:\n```\nrm -f /*\n```\n如果在命令行里直接敲上面的命令，好歹还会提示是否删除，但是在脚本里面则不会。从删库到跑路，真刺激。\n### 总结：\n#### 1.对shell脚本太不熟悉。\n#### 2.缺乏对'rm -rf /*'的敬畏之心。\n\n","slug":"记一次rm-f","published":1,"updated":"2019-04-15T14:38:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjuigrwcl00089f3ec7bawqut","content":"<p>最近在做jmeter性能压测，每次运行前都要手动删除上一次生成的数据，跑完还要手动kill掉jmeter进程，所以就想写个shell脚本，一次性执行所有这些操作。<br>其中删除数据的脚本我写成了下面这样：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file_path = /jproject/result</span><br><span class=\"line\">rm -f <span class=\"variable\">$&#123;fiel_path&#125;</span>/*</span><br></pre></td></tr></table></figure>\n<p>在shell脚本里，${param}如果没有取到值会直接变成空字符串，于是第二条命令喜闻乐见的被解析成了:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -f /*</span><br></pre></td></tr></table></figure></p>\n<p>如果在命令行里直接敲上面的命令，好歹还会提示是否删除，但是在脚本里面则不会。从删库到跑路，真刺激。</p>\n<h3 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h3><h4 id=\"1-对shell脚本太不熟悉。\"><a href=\"#1-对shell脚本太不熟悉。\" class=\"headerlink\" title=\"1.对shell脚本太不熟悉。\"></a>1.对shell脚本太不熟悉。</h4><h4 id=\"2-缺乏对’rm-rf-’的敬畏之心。\"><a href=\"#2-缺乏对’rm-rf-’的敬畏之心。\" class=\"headerlink\" title=\"2.缺乏对’rm -rf /*’的敬畏之心。\"></a>2.缺乏对’rm -rf /*’的敬畏之心。</h4>","site":{"data":{}},"excerpt":"","more":"<p>最近在做jmeter性能压测，每次运行前都要手动删除上一次生成的数据，跑完还要手动kill掉jmeter进程，所以就想写个shell脚本，一次性执行所有这些操作。<br>其中删除数据的脚本我写成了下面这样：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file_path = /jproject/result</span><br><span class=\"line\">rm -f <span class=\"variable\">$&#123;fiel_path&#125;</span>/*</span><br></pre></td></tr></table></figure>\n<p>在shell脚本里，${param}如果没有取到值会直接变成空字符串，于是第二条命令喜闻乐见的被解析成了:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -f /*</span><br></pre></td></tr></table></figure></p>\n<p>如果在命令行里直接敲上面的命令，好歹还会提示是否删除，但是在脚本里面则不会。从删库到跑路，真刺激。</p>\n<h3 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h3><h4 id=\"1-对shell脚本太不熟悉。\"><a href=\"#1-对shell脚本太不熟悉。\" class=\"headerlink\" title=\"1.对shell脚本太不熟悉。\"></a>1.对shell脚本太不熟悉。</h4><h4 id=\"2-缺乏对’rm-rf-’的敬畏之心。\"><a href=\"#2-缺乏对’rm-rf-’的敬畏之心。\" class=\"headerlink\" title=\"2.缺乏对’rm -rf /*’的敬畏之心。\"></a>2.缺乏对’rm -rf /*’的敬畏之心。</h4>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjuigrwca00019f3exqhnpte9","category_id":"cjuigrwch00059f3el97lwfn9","_id":"cjuigrwcn000b9f3ehnde5aeq"},{"post_id":"cjuigrwcf00039f3e7c8w40yo","category_id":"cjuigrwcm00099f3e9kvhomea","_id":"cjuigrwcp000g9f3eynpu3zye"},{"post_id":"cjuigrwck00079f3eor1ms9ie","category_id":"cjuigrwcm00099f3e9kvhomea","_id":"cjuigrwcq000i9f3eljihvgcz"}],"PostTag":[{"post_id":"cjuigrwca00019f3exqhnpte9","tag_id":"cjuigrwcj00069f3eoa8cs47z","_id":"cjuigrwcp000e9f3etkzt7dbj"},{"post_id":"cjuigrwca00019f3exqhnpte9","tag_id":"cjuigrwcm000a9f3egs5mdi3y","_id":"cjuigrwcp000f9f3ejnpbwcrm"},{"post_id":"cjuigrwcf00039f3e7c8w40yo","tag_id":"cjuigrwcj00069f3eoa8cs47z","_id":"cjuigrwcq000l9f3e0x1n1q27"},{"post_id":"cjuigrwcf00039f3e7c8w40yo","tag_id":"cjuigrwcp000h9f3eutg5n01t","_id":"cjuigrwcr000m9f3epogop03u"},{"post_id":"cjuigrwcf00039f3e7c8w40yo","tag_id":"cjuigrwcq000j9f3expsrnva4","_id":"cjuigrwcr000o9f3edj5zdsis"},{"post_id":"cjuigrwck00079f3eor1ms9ie","tag_id":"cjuigrwcj00069f3eoa8cs47z","_id":"cjuigrwcs000q9f3ecg2707mf"},{"post_id":"cjuigrwck00079f3eor1ms9ie","tag_id":"cjuigrwcp000h9f3eutg5n01t","_id":"cjuigrwcs000r9f3e9wbigmhv"},{"post_id":"cjuigrwck00079f3eor1ms9ie","tag_id":"cjuigrwcq000j9f3expsrnva4","_id":"cjuigrwcs000s9f3ewr0k5q8m"}],"Tag":[{"name":"java","_id":"cjuigrwcj00069f3eoa8cs47z"},{"name":"并发编程","_id":"cjuigrwcm000a9f3egs5mdi3y"},{"name":"springboot","_id":"cjuigrwcp000h9f3eutg5n01t"},{"name":"swagger","_id":"cjuigrwcq000j9f3expsrnva4"}]}}